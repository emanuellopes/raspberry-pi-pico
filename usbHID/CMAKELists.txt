# What CMake to start at
# Define Board and cmake version
cmake_minimum_required(VERSION 3.13)
set(PICO_BOARD pico_w)
set(FAMILY rp2040)
set(BOARD pico_sdk)

# define c library VERSION
set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)

# Include .cmake files from sdk
include($ENV{PICO_SDK_PATH}/pico_sdk_init.cmake)
include($ENV{PICO_SDK_PATH}/pico_sdk_version.cmake)

file(GLOB SRC_FILES src/*.c src/*.h)

# Check sdk version
if (PICO_SDK_VERSION_STRING VERSION_LESS "1.5.1")
  message(FATAL_ERROR "Raspberry Pi Pico SDK version 1.5.1 (or later) required. Your version is ${PICO_SDK_VERSION_STRING}")
endif()

project(Keyboard C CXX ASM)

# Link source files and executables
add_executable(Keyboard)

target_sources(Keyboard PUBLIC ${SRC_FILES})

#target_sources(Keyboard PUBLIC
#        ${CMAKE_CURRENT_LIST_DIR}/src/main.c
#)

# Add the standard library to the build
target_link_libraries(Keyboard PUBLIC
        pico_stdlib
        pico_util
        pico_cyw43_arch_none
        pico_btstack_cyw43
        pico_btstack_classic)

# Include config files for btstack and tusb
target_include_directories(Keyboard PRIVATE ${CMAKE_CURRENT_LIST_DIR}/src/config)

# Add any user requested libraries   ----------
target_link_libraries(Keyboard PUBLIC
        tinyusb_host
        tinyusb_board)

# Initialise the Raspberry Pi Pico SDK
pico_sdk_init()

pico_set_program_name(Keyboard Keyboard)
pico_set_program_version(Keyboard "0.1")

# enable uart/usb output, disable usb output
pico_enable_stdio_uart(Keyboard 1)
pico_enable_stdio_usb(Keyboard 0)

# create map/bin/hex file etc.
pico_add_extra_outputs(Keyboard)